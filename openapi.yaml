openapi: 3.0.0
info:
  version: 5.17.4
  title: On Rewind API
  description: >
    On Rewind API documentation based on OpenAPI 3.0.

    This document provides info on all publicly accessible routes if identified
    with a bearer token.
  contact:
    name: API Support
    email: developers@onrewind.com
servers:
  - url: 'https://api-gateway.onrewind.tv'
  - url: 'https://staging-api-gateway.onrewind.tv'
  - url: 'https://dev-api-gateway.onrewind.tv'
paths:
  $ref: ./paths/index.yaml
components:
  parameters:
    acceptVersion:
      in: header
      name: Accept-Version
      schema:
        type: string
        enum:
          - v5
          - v6
    accountKey:
      in: header
      name: x-account-key
      description: Identifies the customer's account
      required: true
      schema:
        type: string
    fieldsParam:
      name: fields
      in: query
      description: Comma separated string to filter desired fields
      required: false
      schema:
        type: string
    id:
      name: id
      in: path
      description: the uuid of the object
      required: true
      schema:
        type: string
        format: uuid
    seasonId:
      name: seasonId
      in: path
      description: the uuid of the season
      required: true
      schema:
        type: string
        format: uuid
    competitionId:
      name: competitionId
      in: path
      description: the uuid of the competition
      required: true
      schema:
        type: string
        format: uuid
    challengerId:
      name: challengerId
      in: path
      description: the uuid of the challenger
      required: true
      schema:
        type: string
        format: uuid
    SportId:
      name: SportId
      in: path
      description: the uuid of the sport
      schema:
        type: string
        format: uuid
    streamableId:
      name: streamableId
      in: path
      description: the uuid of the streamable
      required: true
      schema:
        type: string
        format: uuid
    chatId:
      name: chatId
      in: path
      description: the uuid of the chat
      required: true
      schema:
        type: string
        format: uuid
    resourceType:
      name: resourceType
      in: path
      description: the type of the resource
      schema:
        type: string
        enum:
          - marker
          - event
          - challenger
          - article
          - video
          - team
          - teammate
          - message
    resourceId:
      name: resourceId
      in: path
      description: the uuid of the resource
      schema:
        type: string
        format: uuid
    type:
      name: type
      in: path
      description: the type of the activity
      schema:
        type: string
        enum:
          - like
          - watch
          - bookmark
    limit:
      name: limit
      in: path
      description: number of expected results
      schema:
        type: integer
  responses:
    UserNotAuthorized:
      description: UserNotAuthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    InvalidModel:
      description: InvalidModel
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    ConflictInModel:
      description: ConflictInModel
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  schemas:
    Account:
      title: Account
      required:
        - code
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        key:
          type: string
          description: code name to identify an account in friendler manner
        name:
          type: string
          description: Account's name
        description:
          type: string
          description: Account's description
        meta:
          type: object
          description: >-
            Attribute storing extra data about the user, like a google analytics
            account id
          properties:
            hashtag:
              type: string
            google_analytics_id:
              type: string
        SportId:
          type: string
          format: uuid
          description: Reference to a sport instance
    BusinessPlayer:
      title: BusinessPlayer
      required:
        - name
        - organiserName
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          description: Business player's name
        description:
          type: string
          description: Business player's description
        organiserName:
          type: string
          description: The name of the business organiser
        state:
          type: string
          description: The state of the player
          enum:
            - liveOn
            - liveOff
            - replay
          default: replay
        placeholder:
          type: object
          description: Attribute storing extra data about the business player placeholder
          properties:
            poster:
              type: string
              description: The URL of the placeholder image
            text:
              type: string
              description: The text associated to the placeholder
        options:
          type: object
          description: Attribute storing extra data about the business player
          properties:
            autostart:
              type: boolean
            chapterOnLoad:
              type: boolean
            chaptersTitle:
              type: string
            initialStartingTime:
              type: integer
            showControls:
              type: boolean
        startDate:
          type: string
          description: The date when the business starts
          format: date-time
        endDate:
          type: string
          description: The date when the business ends
          format: date-time
        activatedModules:
          type: array
          description: The list of active modules for this business player
          items:
            type: integer
        visibility:
          type: string
          description: The visibility of the player
          enum:
            - public
            - private
          default: public
        tags:
          type: object
          description: >-
            Attribute storing extra data to be used for classification or search
            purposes
          properties:
            private:
              type: array
              description: List of private tag.
              items:
                type: string
                description: 'it should respect the format: "key:value"'
                pattern: '/^[wÀ-ú0-9 ]+(?::[wÀ-ú0-9 ]+)?$/'
            public:
              type: array
              description: List of private tag.
              items:
                type: string
                description: 'it should respect the format: "key:value"'
                pattern: '/^[^:]+$/'
        AccountId:
          type: string
          format: uuid
    Challenger:
      title: Challenger
      required:
        - name
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          description: name of the challenger
        type:
          type: string
          enum:
            - standard
            - team
            - teammate
          description: |
            Type of the challenger, possible values are:
            - standard: the challenger is a challenger.
            - team: the challenger is a team. It has many teammate.
            - teammate: the challenger is a teammate. It belongs to team.
          default: standard
        country:
          type: string
          description: country code of the challenger
        birthday:
          type: string
          format: date
          description: 'the birthday of the challenger (standard, teammate)'
        picture:
          type: string
          description: the filename of the main picture of the challenger
        profileOptions:
          type: object
          description: >-
            Object that contains statistics and buttons to display the
            challenger profile
          format: json
        jerseyPicture:
          type: string
          description: >-
            the filename of the picture of the challengers jersey (standard,
            team)
        firstName:
          type: string
          description: 'the first name of the challenger (standard, teammate)'
        role:
          type: string
          description: the role of the challenger
        Teammates:
          type: array
          description: Array of teammate belonging to a team.
          items:
            type: object
            description: teammate (challenger) data
        TeamId:
          type: string
          format: uuid
          description: Reference to a team instance (challenger)
        SportId:
          type: string
          format: uuid
          description: Reference to a sport instance
    Chat:
      title: Chat
      required:
        - name
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        resourceId:
          type: string
          format: uuid
          description: id of the resource on which the chat is activated
        resourceType:
          type: string
          description: type of the resource on which the chat is activated
          enum:
            - event
            - business-player
    Clip:
      title: Clip
      required:
        - name
        - meta
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          description: The name of the clip
        state:
          type: string
          description: The state of the clip
          enum:
            - none
            - error
            - ready
            - in_progress
          default: none
        meta:
          type: object
          description: Attribute storing extra data about the clip
          properties:
            format:
              type: string
              description: The file format (ex MP4)
            duration:
              type: integer
              description: The duration of the clip in seconds
    CMSItem:
      title: CMSItem
      required:
        - system
        - elements
      properties:
        system:
          type: object
          required:
            - id
            - name
            - type
            - last_modified
          description: Metadata about the item as stored in the CMS
          properties:
            id:
              type: string
              description: The id of the item as assigned automatically by the CMS
            name:
              type: string
              description: The name of the item as entered in the CMS
            type:
              type: string
              description: The type of item
            last_modified:
              type: string
              description: The date and time when the item was last modified in the CMS
        elements:
          type: object
          description: A container object for one or several objects making up this item
          properties:
            event:
              type: string
            video:
              $ref: '#/components/schemas/Video'
    Error:
      title: Error
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - code
        - message
    Event:
      title: Event
      required:
        - name
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          description: Event's name
        organiserName:
          type: string
          description: name of the organiser of the event
        description:
          type: string
          description: Event's description
        location:
          type: string
          description: Event's location
        startDate:
          type: string
          description: The date when the event starts
          format: date-time
        endDate:
          type: string
          description: The date when the event ends
          format: date-time
        state:
          type: string
          description: The state of the event
          enum:
            - liveOn
            - liveOff
            - replay
          default: replay
        placeholder:
          type: object
          description: Attribute storing extra data about the event placeholder
          properties:
            poster:
              type: string
              description: The URL of the placeholder image
            text:
              type: string
              description: The text associated to the placeholder
        activatedModules:
          type: array
          description: The list of active modules for this event
          items:
            type: integer
        pricingPlans:
          type: array
          description: Attribute storing payment plan. Need payment module activated
          items:
            type: string
            description: stripe plan id
        geoBlockingMapping:
          type: object
          description: >-
            contains an object with key=CountryCode and value="onrewind.com,
            http://myplayer.onrewind.com/player.html"
          deprecated: true
        dailymotionLiveStreamId:
          type: string
          description: holding dailymotion stream id
        youtubeLiveStreamId:
          type: string
          description: holding youtube stream id
          deprecated: true
        hashtag:
          type: string
          description: >-
            twitter hashtag of the event, used to build twitter feed around an
            event
        options:
          type: object
          description: Attribute storing extra data about the event
        score:
          type: object
          deprecated: true
          description: >-
            score of current event, this field was added quickly to solve a
            customer problemn. We do not recommend using this field.
          properties:
            teamIn:
              type: string
              description: name of home team
            teamOut:
              type: string
              description: name of away team
            scoreIn:
              type: string
              description: socre of home team
            scoreOut:
              type: string
              description: socre of away team
        facebookPlaylistId:
          type: string
          description: >-
            facebook playlist id, used to upload event's clips to customer
            facebook page inside this playlist.
        visibility:
          type: string
          description: The visibility of the player
          enum:
            - public
            - private
          default: public
        tags:
          type: object
          description: >-
            Attribute storing extra data to be used for classification or search
            purposes
          properties:
            private:
              type: array
              description: List of private tag.
              items:
                type: string
                description: 'it should respect the format: "key:value"'
                pattern: '/^[wÀ-ú0-9 ]+(?::[wÀ-ú0-9 ]+)?$/'
            public:
              type: array
              description: List of private tag.
              items:
                type: string
                description: 'it should respect the format: "key:value"'
                pattern: '/^[^:]+$/'
        AccountId:
          type: string
          format: uuid
    ExtendedFan:
      title: ExtendedFan
      required:
        - FanId
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        FanId:
          type: string
          format: uuid
          description: FanId representing the fan we are extending
        isBlocked:
          type: boolean
          description: value to know if a fan has been blocked from using chats
    Fan:
      title: Fan
      required:
        - fanname
        - Groups
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        username:
          type: string
          description: username of the fan
        email:
          type: string
          description: Email of the fan
        lastName:
          type: string
          description: last name of the fan
        firstName:
          type: string
          description: first name of the fan
        phone:
          type: string
          format: phone
        type:
          type: string
          enum:
            - active
            - inactive
            - system
          default: inactive
        password:
          type: string
          format: password
        meta:
          type: object
          description: >-
            Attribute storing extra data about the fan, like a google analytics
            account id
          properties:
            hashtag:
              type: string
            google_analytics_id:
              type: string
        oauth:
          type: object
          description: >-
            Attribute storing third party oauth data specific to the fan (oauth
            token, account id, etc...)
          properties:
            youtube:
              type: object
            dailymotion:
              type: object
            facebook:
              type: object
            cleeng:
              type: object
            twitter:
              type: object
            twitch:
              type: object
            opta:
              type: object
        Groups:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/Group'
              - type: string
                format: uuid
    Group:
      title: Group
      required:
        - name
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          description: Group's name
        description:
          type: string
          description: Group's description
        accessLevel:
          type: integer
          description: define group access level that allows to add higher permissions
          default: 0
    Message:
      title: Chat
      required:
        - id
        - FanId
        - flagged
        - hidden
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        content:
          type: object
          format: json
          description: 'content of the message,'
          default:
            text: ''
        flagged:
          type: boolean
          default: false
          description: >-
            if true, the message has been flagged by an user as inappropriate.
            It can be used to filter messages to make moderation easier.
        hidden:
          type: boolean
          default: false
          description: >-
            if true, the message has been hidden by a moderator. The message can
            then be filtered for end users but still be visible for the author.
        FanId:
          type: string
          format: uuid
          description: id of the fan that authored the message
        ParentId:
          type: string
          format: uuid
          description: 'id of the parent message, can be used to create a thread'
    Module:
      title: Module
      required:
        - code
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        code:
          type: integer
          description: |
            Integer associated to a module, current values are as follow
            {
              'RESTRAINED_ACCESS': 1,
              'BLOCKMARK': 2,
              'ESHOP_LINKS': 3,
              'WHITE_LABEL': 4,
              'GEO_BLOCKING': 5,
              'ADVERTISING': 6,
              'REMOTE_CONTROL': 7,
              'NOTIFICATION': 8,
              'SIMULCAST': 9,
              'DVR': 10,
              'CHAT': 11,
              'STREAM_CLIPPING': 12,
              'OPTA_PARSING': 13,
              'CLEENG_RESTRICTION': 14
            }
        name:
          type: string
          description: Module's name
        description:
          type: string
          description: Module's description
    Role:
      title: Role
      required:
        - name
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          description: Role's name
        description:
          type: string
          description: Role's description
        accessLevel:
          type: integer
          description: define role access level that allows to add higher permissions
          default: 0
    Sport:
      title: Sport
      required:
        - name
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          description: Sport's name
        description:
          type: string
          description: Sport's description
        timelineType:
          type: string
          description: define timeline type
          enum:
            - single
            - double
          default: single
        svgSpriteFilename:
          type: string
          description: name of svg sprite holding all svg icons used in this sport
        sportsFieldFilename:
          type: string
          description: >-
            name of sports field file that is used to represent the field of the
            sport, used for multicam
    Stream:
      title: Stream
      required:
        - streamType
        - key
        - token
        - streamable
        - streamableId
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        streamType:
          type: string
          description: Stream's type
          enum:
            - main
            - backup
            - additionnal
          default: main
        key:
          type: string
          description: Stream's key. Automatically generated during the stream's creation.
        token:
          type: string
          description: >-
            Stream's token. Automatically generated during the stream's
            creation.
        recordName:
          type: string
          description: Stream's record name
        offset:
          type: integer
          description: Stream's offset in seconds related to the main stream of the event
          default: 0
        mapCoordinates:
          type: object
          description: Stream's camera position in the related sport field.
          properties:
            x:
              type: integer
              description: horizontal position in the minimap
              minimum: 0
            y:
              type: integer
              description: vertical position in the minimap
              minimum: 0
            r:
              type: integer
              description: angle of the camera
              minimum: 0
              maximum: 360
              default: 0
          required:
            - x
            - y
        options:
          type: object
          description: Stream's options used to store particular values
        streamable:
          type: string
          description: >-
            Stream's polymorphic association to a streamable model. Current
            available values are 'event', 'businessPlayer', 'simulcast' and are
            related to the corresponding models which must have at least one
            stream.
        streamableId:
          type: string
          format: uuid
          description: >-
            Stream's polymorphic association to a streamable model. It
            references the id of the associated Event, BusinessPlayer or
            Simulcast.
    User:
      title: User
      required:
        - username
        - Groups
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        username:
          type: string
          description: Username of the user
        email:
          type: string
          description: Email of the user
        lastName:
          type: string
          description: last name of the user
        firstName:
          type: string
          description: first name of the user
        phone:
          type: string
          format: phone
        type:
          type: string
          enum:
            - active
            - inactive
            - system
          default: inactive
        password:
          type: string
          format: password
        meta:
          type: object
          description: >-
            Attribute storing extra data about the user, like a google analytics
            account id
          properties:
            hashtag:
              type: string
            google_analytics_id:
              type: string
        oauth:
          type: object
          description: >-
            Attribute storing third party oauth data specific to the user (oauth
            token, account id, etc...)
          properties:
            youtube:
              type: object
            dailymotion:
              type: object
            facebook:
              type: object
            cleeng:
              type: object
            twitter:
              type: object
            twitch:
              type: object
            opta:
              type: object
        Groups:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/Group'
              - type: string
                format: uuid
    Video:
      title: Video
      required:
        - name
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          description: The name of the video
        description:
          type: string
          description: The description of the video
        duration:
          type: number
          description: The duration of the video in seconds
        poster:
          type: string
          format: uri
          description: The URL of the video poster
        visibility:
          type: string
          description: The visibility of the video
          enum:
            - public
            - private
          default: public
        status:
          type: string
          description: The status of the video
          enum:
            - none
            - original
            - in_progress
            - encoded
            - archived
            - vendor
          default: none
        archiveData:
          type: object
          description: Archive the video data in this object instead of removing it
        vendorName:
          type: string
          description: The name of the vendor
          enum:
            - jwplayer
            - dailymotion
          default: jwplayer
        vendorVideoId:
          type: string
          description: >-
            Video id on the third party service when the video is hosted
            externally
        vendorApiKey:
          type: string
          description: Api key of the third party
        tags:
          type: object
          description: >-
            Attribute storing extra data to be used for classification or search
            purposes
          properties:
            private:
              type: array
              description: List of private tag.
              items:
                type: string
                description: 'it should respect the format: "key:value"'
                pattern: '/^[wÀ-ú0-9 ]+(?::[wÀ-ú0-9 ]+)?$/'
            public:
              type: array
              description: List of private tag.
              items:
                type: string
                description: 'it should respect the format: "key:value"'
                pattern: '/^[^:]+$/'
        AccountId:
          type: string
          format: uuid
    FanActivity:
      title: FanActivity
      required:
        - id
        - type
        - resourceType
        - resourceId
        - FanId
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        type:
          type: string
          description: type of the activity
          enum:
            - watch
            - like
            - bookmark
        meta:
          type: object
          description: Attribute storing extra data about the activity
        resourceType:
          type: string
          description: type of the resource
          enum:
            - event
            - video
            - team
            - teammate
            - marker
            - challenger
            - article
            - message
        resourceId:
          type: string
          description: id of the resource
          format: uuid
        FanId:
          type: string
          description: id of the fan
    Season:
      title: Season
      required:
        - name
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          description: The name of the season
        startDate:
          type: string
          description: The date when the season starts
          format: date-time
        endDate:
          type: string
          description: The date when the season ends
          format: date-time
        SportId:
          type: string
          format: uuid
          description: The id of the associated sport
    Squad:
      title: Squad
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          description: Squad's name. Only for TeamSquad
        meta:
          type: object
          description: 'Squad''s meta data, available for both TeamSquad and TeammateSquad'
        TeamId:
          type: string
          format: uuid
          description: team's id when creating a TeamSquad. Only for TeamSquad
        TeammateId:
          type: string
          format: uuid
          description: teammate's id when creating a TeammateSquad. Only for TeammateSquad
        SeasonId:
          type: string
          format: uuid
          description: season's id when creating a TeamSquad. Only for TeamSquad
        Squad:
          type: string
          format: uuid
          description: >-
            squad's id when creating a TeammateSquad (reference a specific
            TeamSquad). Only for TeammateSquad
    Competition:
      title: Competition
      required:
        - name
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          description: The name of the competition
        slug:
          type: string
          description: The slug of the competition used in the url
        displayOrder:
          type: number
          description: >-
            The position in the list of competitions when listing all the
            competitions for a given sport.
        startDate:
          type: string
          description: The date when the competition starts
          format: date-time
        endDate:
          type: string
          description: The date when the competition ends
          format: date-time
        SportId:
          type: string
          format: uuid
          description: The id of the associated sport
    Round:
      title: Round
      required:
        - name
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          description: The name of the round
        competitionOrder:
          type: number
          description: >-
            The position in the list of rounds when listing all the rounds for a
            given round.
        CompetitionId:
          type: string
          format: uuid
          description: The id of the associated round
        SeasonId:
          type: string
          format: uuid
          description: The id of the associated season
  securitySchemes:
    accessToken:
      type: http
      scheme: bearer
      bearerFormat: JWT
      name: Authorization
      description: >
        A bearer token called "accessToken" is needed to access resources. By
        default the token will expire after 24h. The bearer token must be
        provided on every subsequent requests to the API. More info provided on
        the route 'POST /auth/login'
security:
  - accessToken: []
